{
  "address": "0xb31e9501e24405e0F964E89a7be0e99c6dA9bD6E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vaultId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_priceOracle",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_oraclePeekPayload",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_oraclePeepPayload",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_minPeekLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minPeepLimit",
          "type": "uint256"
        }
      ],
      "name": "getConditionData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_vaultID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_priceOracle",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_oraclePayload",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_minLimit",
          "type": "uint256"
        }
      ],
      "name": "isVaultUnsafeOSM",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_conditionData",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "ok",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xf56bb592f5360cb1c45b32f13b57ddd01f65bc6d3a51fbdbadd5a7c4ee9cd827",
  "receipt": {
    "to": null,
    "from": "0xF953c3d475dc0a9877329F71e2CE3d2519a519A2",
    "contractAddress": "0xb31e9501e24405e0F964E89a7be0e99c6dA9bD6E",
    "transactionIndex": 77,
    "gasUsed": "483680",
    "logsBloom": "0x
    "blockHash": "0xd3371a7298aadfbabecb222a2f202bb31c637e5e09ca77ba237121741aef5c8a",
    "transactionHash": "0xf56bb592f5360cb1c45b32f13b57ddd01f65bc6d3a51fbdbadd5a7c4ee9cd827",
    "logs": [],
    "blockNumber": 11885855,
    "cumulativeGasUsed": "5445938",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "4b220f9f5ace9500863671bb012c293f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_priceOracle\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_oraclePeekPayload\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_oraclePeepPayload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_minPeekLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPeepLimit\",\"type\":\"uint256\"}],\"name\":\"getConditionData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_priceOracle\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_oraclePayload\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_minLimit\",\"type\":\"uint256\"}],\"name\":\"isVaultUnsafeOSM\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_conditionData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ok\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Gelato Team\",\"kind\":\"dev\",\"methods\":{\"getConditionData(uint256,address,bytes,bytes,uint256,uint256)\":{\"details\":\"Use the return for your Task's Condition.data field off-chain.\",\"returns\":{\"_0\":\"The encoded payload for your Task's Condition.data field.\"}},\"isVaultUnsafeOSM(uint256,address,bytes,uint256)\":{\"details\":\"The price oracle must return (bytes32, bool).\",\"params\":{\"_minLimit\":\"The minimum collateral ratio measured in the price of the collateral as specified by the _priceOracle.\",\"_oraclePayload\":\"The data for making the staticcall to the oracle's read  method e.g. the selector for MakerOracle's read fn.\",\"_priceOracle\":\"The price oracle contract to supply the collateral price  e.g. Maker's ETH/USD oracle for ETH collateral pricing.\",\"_vaultID\":\"The id of the Maker vault\"},\"returns\":{\"_0\":\"OK if the Maker Vault is unsafe, otherwise some error message.\"}},\"ok(uint256,bytes,uint256)\":{\"details\":\"A standard interface for GelatoCore to read Conditions\",\"params\":{\"_conditionData\":\"The data you get from `getConditionData()`\"},\"returns\":{\"_0\":\"OK if the Condition is there, else some error message.\"}}},\"title\":\"ConditionMakerVaultUnSafePosition\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getConditionData(uint256,address,bytes,bytes,uint256,uint256)\":{\"notice\":\"Convenience function for off-chain _conditionData encoding\"},\"isVaultUnsafeOSM(uint256,address,bytes,uint256)\":{\"notice\":\"Specific implementation of this Condition's ok function\"},\"ok(uint256,bytes,uint256)\":{\"notice\":\"Standard GelatoCore system function\"}},\"notice\":\"Condition tracking Maker Vault safety requirements.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/contracts/gelato/conditions/maker/ConditionMakerVaultUnSafePosition.sol\":\"ConditionMakerVaultUnSafePosition\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@gelatonetwork/core/contracts/gelato_conditions/GelatoConditionsStandard.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: UNLICENSED\\\"\\npragma solidity >=0.6.10;\\n\\nimport \\\"./IGelatoCondition.sol\\\";\\n\\nabstract contract GelatoConditionsStandard is IGelatoCondition {\\n    string internal constant OK = \\\"OK\\\";\\n}\\n\",\"keccak256\":\"0xa3d9ee5c4398914bbc0fe75fe54e57b73b8a4367caf9a40d9e5fd1ba9d4adb89\",\"license\":\"UNLICENSED\"},\"@gelatonetwork/core/contracts/gelato_conditions/IGelatoCondition.sol\":{\"content\":\"// \\\"SPDX-License-Identifier: UNLICENSED\\\"\\npragma solidity >=0.6.10;\\npragma experimental ABIEncoderV2;\\n\\n/// @title IGelatoCondition - solidity interface of GelatoConditionsStandard\\n/// @notice all the APIs of GelatoConditionsStandard\\n/// @dev all the APIs are implemented inside GelatoConditionsStandard\\ninterface IGelatoCondition {\\n\\n    /// @notice GelatoCore calls this to verify securely the specified Condition securely\\n    /// @dev Be careful only to encode a Task's condition.data as is and not with the\\n    ///  \\\"ok\\\" selector or _taskReceiptId, since those two things are handled by GelatoCore.\\n    /// @param _taskReceiptId This is passed by GelatoCore so we can rely on it as a secure\\n    ///  source of Task identification.\\n    /// @param _conditionData This is the Condition.data field developers must encode their\\n    ///  Condition's specific parameters in.\\n    /// @param _cycleId For Tasks that are executed as part of a cycle.\\n    function ok(uint256 _taskReceiptId, bytes calldata _conditionData, uint256 _cycleId)\\n        external\\n        view\\n        returns(string memory);\\n}\",\"keccak256\":\"0xd07607af93227ec5f8c2f5401289937b98c298f0d2398c1ba7410f82a6253964\",\"license\":\"UNLICENSED\"},\"contracts/constants/CGelato.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.0;\\n\\nimport {\\n    IGelatoGasPriceOracle\\n} from \\\"../interfaces/gelato/IGelatoGasPriceOracle.sol\\\";\\n\\nIGelatoGasPriceOracle constant GELATO_GAS_PRICE_ORACLE = IGelatoGasPriceOracle(\\n    0x169E633A2D1E6c10dD91238Ba11c4A708dfEF37C\\n);\\n\\naddress constant GELATO_EXECUTOR_MODULE = 0x98edc8067Cc671BCAE82D36dCC609C3E4e078AC8;\\n\\naddress constant CONDITION_MAKER_VAULT_UNSAFE_OSM = 0xDF3CDd10e646e4155723a3bC5b1191741DD90333;\\n\",\"keccak256\":\"0xaec344402c244a2c1f78166a66d5424fab2dc004e11bc851066fb6d5bbfc5d73\",\"license\":\"UNLICENSED\"},\"contracts/contracts/gelato/conditions/maker/ConditionMakerVaultUnSafePosition.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.0;\\n\\nimport {\\n    GelatoConditionsStandard\\n} from \\\"@gelatonetwork/core/contracts/gelato_conditions/GelatoConditionsStandard.sol\\\";\\nimport {\\n    CONDITION_MAKER_VAULT_UNSAFE_OSM\\n} from \\\"../../../../constants/CGelato.sol\\\";\\nimport {\\n    IConditionMakerVaultUnsafeOSM\\n} from \\\"../../../../interfaces/gelato/conditions/IConditionMakerVaultUnsafeOSM.sol\\\";\\n\\n/// @title ConditionMakerVaultUnSafePosition\\n/// @notice Condition tracking Maker Vault safety requirements.\\n/// @author Gelato Team\\ncontract ConditionMakerVaultUnSafePosition is GelatoConditionsStandard {\\n    /// @notice Standard GelatoCore system function\\n    /// @dev A standard interface for GelatoCore to read Conditions\\n    /// @param _conditionData The data you get from `getConditionData()`\\n    /// @return OK if the Condition is there, else some error message.\\n    function ok(\\n        uint256,\\n        bytes calldata _conditionData,\\n        uint256\\n    ) public view virtual override returns (string memory) {\\n        (\\n            uint256 _vaultID,\\n            address _priceOracle,\\n            bytes memory _oraclePeekPayload,\\n            bytes memory _oraclePeepPayload,\\n            uint256 _minPeekLimit,\\n            uint256 _minPeepLimit\\n        ) =\\n            abi.decode(\\n                _conditionData[4:],\\n                (uint256, address, bytes, bytes, uint256, uint256)\\n            );\\n\\n        return\\n            _isOk(\\n                isVaultUnsafeOSM(\\n                    _vaultID,\\n                    _priceOracle,\\n                    _oraclePeekPayload,\\n                    _minPeekLimit\\n                )\\n            ) ||\\n                _isOk(\\n                    isVaultUnsafeOSM(\\n                        _vaultID,\\n                        _priceOracle,\\n                        _oraclePeepPayload,\\n                        _minPeepLimit\\n                    )\\n                )\\n                ? OK\\n                : \\\"MakerVaultNotUnsafe\\\";\\n    }\\n\\n    /// @notice Specific implementation of this Condition's ok function\\n    /// @dev The price oracle must return (bytes32, bool).\\n    /// @param _vaultID The id of the Maker vault\\n    /// @param _priceOracle The price oracle contract to supply the collateral price\\n    ///  e.g. Maker's ETH/USD oracle for ETH collateral pricing.\\n    /// @param _oraclePayload The data for making the staticcall to the oracle's read\\n    ///  method e.g. the selector for MakerOracle's read fn.\\n    /// @param _minLimit The minimum collateral ratio measured in the price\\n    /// of the collateral as specified by the _priceOracle.\\n    /// @return OK if the Maker Vault is unsafe, otherwise some error message.\\n    function isVaultUnsafeOSM(\\n        uint256 _vaultID,\\n        address _priceOracle,\\n        bytes memory _oraclePayload,\\n        uint256 _minLimit\\n    ) public view virtual returns (string memory) {\\n        return\\n            IConditionMakerVaultUnsafeOSM(CONDITION_MAKER_VAULT_UNSAFE_OSM)\\n                .isVaultUnsafeOSM(\\n                _vaultID,\\n                _priceOracle,\\n                _oraclePayload,\\n                _minLimit\\n            );\\n    }\\n\\n    /// @notice Convenience function for off-chain _conditionData encoding\\n    /// @dev Use the return for your Task's Condition.data field off-chain.\\n    /// @return The encoded payload for your Task's Condition.data field.\\n    function getConditionData(\\n        uint256 _vaultId,\\n        address _priceOracle,\\n        bytes calldata _oraclePeekPayload,\\n        bytes calldata _oraclePeepPayload,\\n        uint256 _minPeekLimit,\\n        uint256 _minPeepLimit\\n    ) public pure virtual returns (bytes memory) {\\n        return\\n            abi.encodeWithSelector(\\n                this.isVaultUnsafeOSM.selector,\\n                _vaultId,\\n                _priceOracle,\\n                _oraclePeekPayload,\\n                _oraclePeepPayload,\\n                _minPeekLimit,\\n                _minPeepLimit\\n            );\\n    }\\n\\n    function _isOk(string memory _isSafe) internal view returns (bool) {\\n        return\\n            keccak256(abi.encodePacked(_isSafe)) ==\\n            keccak256(abi.encodePacked(OK));\\n    }\\n}\\n\",\"keccak256\":\"0x5fd7f481cbf7900777fe3870ce0a69df26b447a3c25a29a826374c5a403aad79\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/gelato/IGelatoGasPriceOracle.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.0;\\n\\ninterface IGelatoGasPriceOracle {\\n    function latestAnswer() external view returns (int256);\\n}\\n\",\"keccak256\":\"0x5d16f3187c98a910aeb6309f4b5a705237806fba133c7174713a9df7f482cbcb\",\"license\":\"UNLICENSED\"},\"contracts/interfaces/gelato/conditions/IConditionMakerVaultUnsafeOSM.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.0;\\n\\ninterface IConditionMakerVaultUnsafeOSM {\\n    function isVaultUnsafeOSM(\\n        uint256 _vaultID,\\n        address _priceOracle,\\n        bytes memory _oraclePayload,\\n        uint256 _minColRatio\\n    ) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x080e8fea3d6d0632c61a7b93e2fd1747d1b81fb6e15e272ff58e0110cf951f95\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506107c9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636e8391dd1461004657806398f2695e1461006f578063a99891c514610082575b600080fd5b6100596100543660046104ee565b610095565b6040516100669190610610565b60405180910390f35b61005961007d366004610456565b610132565b61005961009036600461054d565b61019b565b604051636e8391dd60e01b815260609073df3cdd10e646e4155723a3bc5b1191741dd9033390636e8391dd906100d5908890889088908890600401610680565b60006040518083038186803b1580156100ed57600080fd5b505afa158015610101573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610129919081019061035d565b95945050505050565b6060636e8391dd60e01b898989898989898960405160240161015b98979695949392919061062a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905098975050505050505050565b6060600080808080806101b1896004818d61070d565b8101906101be91906103c7565b9550955095509550955095506101de6101d987878786610095565b610253565b806101f357506101f36101d987878685610095565b61022857604051806040016040528060138152602001724d616b65725661756c744e6f74556e7361666560681b815250610244565b604051806040016040528060028152602001614f4b60f01b8152505b9b9a5050505050505050505050565b6000604051806040016040528060028152602001614f4b60f01b81525060405160200161028091906105f4565b60405160208183030381529060405280519060200120826040516020016102a791906105f4565b60405160208183030381529060405280519060200120149050919050565b60008083601f8401126102d6578182fd5b50813567ffffffffffffffff8111156102ed578182fd5b60208301915083602082850101111561030557600080fd5b9250929050565b600082601f83011261031c578081fd5b813561032f61032a826106e5565b6106bb565b818152846020838601011115610343578283fd5b816020850160208301379081016020019190915292915050565b60006020828403121561036e578081fd5b815167ffffffffffffffff811115610384578182fd5b8201601f81018413610394578182fd5b80516103a261032a826106e5565b8181528560208385010111156103b6578384fd5b610129826020830160208601610735565b60008060008060008060c087890312156103df578182fd5b8635955060208701356103f18161077b565b9450604087013567ffffffffffffffff8082111561040d578384fd5b6104198a838b0161030c565b9550606089013591508082111561042e578384fd5b5061043b89828a0161030c565b9350506080870135915060a087013590509295509295509295565b60008060008060008060008060c0898b031215610471578182fd5b8835975060208901356104838161077b565b9650604089013567ffffffffffffffff8082111561049f578384fd5b6104ab8c838d016102c5565b909850965060608b01359150808211156104c3578384fd5b506104d08b828c016102c5565b999c989b5096999598969760808701359660a0013595509350505050565b60008060008060808587031215610503578384fd5b8435935060208501356105158161077b565b9250604085013567ffffffffffffffff811115610530578283fd5b61053c8782880161030c565b949793965093946060013593505050565b60008060008060608587031215610562578384fd5b84359350602085013567ffffffffffffffff81111561057f578384fd5b61058b878288016102c5565b9598909750949560400135949350505050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b600081518084526105e0816020860160208601610735565b601f01601f19169290920160200192915050565b60008251610606818460208701610735565b9190910192915050565b60006020825261062360208301846105c8565b9392505050565b8881526001600160a01b038816602082015260c060408201819052600090610655908301888a61059e565b828103606084015261066881878961059e565b6080840195909552505060a001529695505050505050565b8481526001600160a01b03841660208201526080604082018190526000906106aa908301856105c8565b905082606083015295945050505050565b60405181810167ffffffffffffffff811182821017156106dd576106dd610765565b604052919050565b600067ffffffffffffffff8211156106ff576106ff610765565b50601f01601f191660200190565b6000808585111561071c578182fd5b83861115610728578182fd5b5050820193919092039150565b60005b83811015610750578181015183820152602001610738565b8381111561075f576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461079057600080fd5b5056fea264697066735822122049b67e912130cc32cb4ca1fd8666b739582d1ad15853a0911fffc82c63115b3f64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80636e8391dd1461004657806398f2695e1461006f578063a99891c514610082575b600080fd5b6100596100543660046104ee565b610095565b6040516100669190610610565b60405180910390f35b61005961007d366004610456565b610132565b61005961009036600461054d565b61019b565b604051636e8391dd60e01b815260609073df3cdd10e646e4155723a3bc5b1191741dd9033390636e8391dd906100d5908890889088908890600401610680565b60006040518083038186803b1580156100ed57600080fd5b505afa158015610101573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610129919081019061035d565b95945050505050565b6060636e8391dd60e01b898989898989898960405160240161015b98979695949392919061062a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152905098975050505050505050565b6060600080808080806101b1896004818d61070d565b8101906101be91906103c7565b9550955095509550955095506101de6101d987878786610095565b610253565b806101f357506101f36101d987878685610095565b61022857604051806040016040528060138152602001724d616b65725661756c744e6f74556e7361666560681b815250610244565b604051806040016040528060028152602001614f4b60f01b8152505b9b9a5050505050505050505050565b6000604051806040016040528060028152602001614f4b60f01b81525060405160200161028091906105f4565b60405160208183030381529060405280519060200120826040516020016102a791906105f4565b60405160208183030381529060405280519060200120149050919050565b60008083601f8401126102d6578182fd5b50813567ffffffffffffffff8111156102ed578182fd5b60208301915083602082850101111561030557600080fd5b9250929050565b600082601f83011261031c578081fd5b813561032f61032a826106e5565b6106bb565b818152846020838601011115610343578283fd5b816020850160208301379081016020019190915292915050565b60006020828403121561036e578081fd5b815167ffffffffffffffff811115610384578182fd5b8201601f81018413610394578182fd5b80516103a261032a826106e5565b8181528560208385010111156103b6578384fd5b610129826020830160208601610735565b60008060008060008060c087890312156103df578182fd5b8635955060208701356103f18161077b565b9450604087013567ffffffffffffffff8082111561040d578384fd5b6104198a838b0161030c565b9550606089013591508082111561042e578384fd5b5061043b89828a0161030c565b9350506080870135915060a087013590509295509295509295565b60008060008060008060008060c0898b031215610471578182fd5b8835975060208901356104838161077b565b9650604089013567ffffffffffffffff8082111561049f578384fd5b6104ab8c838d016102c5565b909850965060608b01359150808211156104c3578384fd5b506104d08b828c016102c5565b999c989b5096999598969760808701359660a0013595509350505050565b60008060008060808587031215610503578384fd5b8435935060208501356105158161077b565b9250604085013567ffffffffffffffff811115610530578283fd5b61053c8782880161030c565b949793965093946060013593505050565b60008060008060608587031215610562578384fd5b84359350602085013567ffffffffffffffff81111561057f578384fd5b61058b878288016102c5565b9598909750949560400135949350505050565b60008284528282602086013780602084860101526020601f19601f85011685010190509392505050565b600081518084526105e0816020860160208601610735565b601f01601f19169290920160200192915050565b60008251610606818460208701610735565b9190910192915050565b60006020825261062360208301846105c8565b9392505050565b8881526001600160a01b038816602082015260c060408201819052600090610655908301888a61059e565b828103606084015261066881878961059e565b6080840195909552505060a001529695505050505050565b8481526001600160a01b03841660208201526080604082018190526000906106aa908301856105c8565b905082606083015295945050505050565b60405181810167ffffffffffffffff811182821017156106dd576106dd610765565b604052919050565b600067ffffffffffffffff8211156106ff576106ff610765565b50601f01601f191660200190565b6000808585111561071c578182fd5b83861115610728578182fd5b5050820193919092039150565b60005b83811015610750578181015183820152602001610738565b8381111561075f576000848401525b50505050565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461079057600080fd5b5056fea264697066735822122049b67e912130cc32cb4ca1fd8666b739582d1ad15853a0911fffc82c63115b3f64736f6c63430008000033",
  "devdoc": {
    "author": "Gelato Team",
    "kind": "dev",
    "methods": {
      "getConditionData(uint256,address,bytes,bytes,uint256,uint256)": {
        "details": "Use the return for your Task's Condition.data field off-chain.",
        "returns": {
          "_0": "The encoded payload for your Task's Condition.data field."
        }
      },
      "isVaultUnsafeOSM(uint256,address,bytes,uint256)": {
        "details": "The price oracle must return (bytes32, bool).",
        "params": {
          "_minLimit": "The minimum collateral ratio measured in the price of the collateral as specified by the _priceOracle.",
          "_oraclePayload": "The data for making the staticcall to the oracle's read  method e.g. the selector for MakerOracle's read fn.",
          "_priceOracle": "The price oracle contract to supply the collateral price  e.g. Maker's ETH/USD oracle for ETH collateral pricing.",
          "_vaultID": "The id of the Maker vault"
        },
        "returns": {
          "_0": "OK if the Maker Vault is unsafe, otherwise some error message."
        }
      },
      "ok(uint256,bytes,uint256)": {
        "details": "A standard interface for GelatoCore to read Conditions",
        "params": {
          "_conditionData": "The data you get from `getConditionData()`"
        },
        "returns": {
          "_0": "OK if the Condition is there, else some error message."
        }
      }
    },
    "title": "ConditionMakerVaultUnSafePosition",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getConditionData(uint256,address,bytes,bytes,uint256,uint256)": {
        "notice": "Convenience function for off-chain _conditionData encoding"
      },
      "isVaultUnsafeOSM(uint256,address,bytes,uint256)": {
        "notice": "Specific implementation of this Condition's ok function"
      },
      "ok(uint256,bytes,uint256)": {
        "notice": "Standard GelatoCore system function"
      }
    },
    "notice": "Condition tracking Maker Vault safety requirements.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}
